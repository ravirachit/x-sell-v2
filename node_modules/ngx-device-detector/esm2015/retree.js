/**
 * Created by ahsanayaz on 08/11/2016.
 */
export class ReTree {
    constructor() { }
    test(string, regex) {
        let self = this;
        if (typeof regex === 'string') {
            regex = new RegExp(regex);
        }
        if (regex instanceof RegExp) {
            return regex.test(string);
        }
        else if (regex && Array.isArray(regex.and)) {
            return regex.and.every(function (item) {
                return self.test(string, item);
            });
        }
        else if (regex && Array.isArray(regex.or)) {
            return regex.or.some(function (item) {
                return self.test(string, item);
            });
        }
        else if (regex && regex.not) {
            return !self.test(string, regex.not);
        }
        else {
            return false;
        }
    }
    exec(string, regex) {
        let self = this;
        if (typeof regex === 'string') {
            regex = new RegExp(regex);
        }
        if (regex instanceof RegExp) {
            return regex.exec(string);
        }
        else if (regex && Array.isArray(regex)) {
            return regex.reduce(function (res, item) {
                return !!res ? res : self.exec(string, item);
            }, null);
        }
        else {
            return null;
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmV0cmVlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWRldmljZS1kZXRlY3Rvci8iLCJzb3VyY2VzIjpbInJldHJlZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUVILE1BQU0sT0FBTyxNQUFNO0lBQ2pCLGdCQUFlLENBQUM7SUFFVCxJQUFJLENBQUMsTUFBYyxFQUFFLEtBQVU7UUFDcEMsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFBO1FBQ2YsSUFBSSxPQUFPLEtBQUssS0FBSyxRQUFRLEVBQUU7WUFDN0IsS0FBSyxHQUFHLElBQUksTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFBO1NBQzFCO1FBRUQsSUFBSSxLQUFLLFlBQVksTUFBTSxFQUFFO1lBQzNCLE9BQU8sS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQTtTQUMxQjthQUFNLElBQUksS0FBSyxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQzVDLE9BQU8sS0FBSyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsVUFBVSxJQUFTO2dCQUN4QyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFBO1lBQ2hDLENBQUMsQ0FBQyxDQUFBO1NBQ0g7YUFBTSxJQUFJLEtBQUssSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsRUFBRTtZQUMzQyxPQUFPLEtBQUssQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFVBQVUsSUFBUztnQkFDdEMsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQTtZQUNoQyxDQUFDLENBQUMsQ0FBQTtTQUNIO2FBQU0sSUFBSSxLQUFLLElBQUksS0FBSyxDQUFDLEdBQUcsRUFBRTtZQUM3QixPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFBO1NBQ3JDO2FBQU07WUFDTCxPQUFPLEtBQUssQ0FBQTtTQUNiO0lBQ0gsQ0FBQztJQUVNLElBQUksQ0FBQyxNQUFjLEVBQUUsS0FBVTtRQUNwQyxJQUFJLElBQUksR0FBRyxJQUFJLENBQUE7UUFDZixJQUFJLE9BQU8sS0FBSyxLQUFLLFFBQVEsRUFBRTtZQUM3QixLQUFLLEdBQUcsSUFBSSxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUE7U0FDMUI7UUFFRCxJQUFJLEtBQUssWUFBWSxNQUFNLEVBQUU7WUFDM0IsT0FBTyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFBO1NBQzFCO2FBQU0sSUFBSSxLQUFLLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUN4QyxPQUFPLEtBQUssQ0FBQyxNQUFNLENBQUMsVUFBVSxHQUFRLEVBQUUsSUFBUztnQkFDL0MsT0FBTyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFBO1lBQzlDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQTtTQUNUO2FBQU07WUFDTCxPQUFPLElBQUksQ0FBQTtTQUNaO0lBQ0gsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDcmVhdGVkIGJ5IGFoc2FuYXlheiBvbiAwOC8xMS8yMDE2LlxuICovXG5cbmV4cG9ydCBjbGFzcyBSZVRyZWUge1xuICBjb25zdHJ1Y3RvcigpIHt9XG5cbiAgcHVibGljIHRlc3Qoc3RyaW5nOiBzdHJpbmcsIHJlZ2V4OiBhbnkpOiBhbnkge1xuICAgIGxldCBzZWxmID0gdGhpc1xuICAgIGlmICh0eXBlb2YgcmVnZXggPT09ICdzdHJpbmcnKSB7XG4gICAgICByZWdleCA9IG5ldyBSZWdFeHAocmVnZXgpXG4gICAgfVxuXG4gICAgaWYgKHJlZ2V4IGluc3RhbmNlb2YgUmVnRXhwKSB7XG4gICAgICByZXR1cm4gcmVnZXgudGVzdChzdHJpbmcpXG4gICAgfSBlbHNlIGlmIChyZWdleCAmJiBBcnJheS5pc0FycmF5KHJlZ2V4LmFuZCkpIHtcbiAgICAgIHJldHVybiByZWdleC5hbmQuZXZlcnkoZnVuY3Rpb24gKGl0ZW06IGFueSkge1xuICAgICAgICByZXR1cm4gc2VsZi50ZXN0KHN0cmluZywgaXRlbSlcbiAgICAgIH0pXG4gICAgfSBlbHNlIGlmIChyZWdleCAmJiBBcnJheS5pc0FycmF5KHJlZ2V4Lm9yKSkge1xuICAgICAgcmV0dXJuIHJlZ2V4Lm9yLnNvbWUoZnVuY3Rpb24gKGl0ZW06IGFueSkge1xuICAgICAgICByZXR1cm4gc2VsZi50ZXN0KHN0cmluZywgaXRlbSlcbiAgICAgIH0pXG4gICAgfSBlbHNlIGlmIChyZWdleCAmJiByZWdleC5ub3QpIHtcbiAgICAgIHJldHVybiAhc2VsZi50ZXN0KHN0cmluZywgcmVnZXgubm90KVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgZXhlYyhzdHJpbmc6IHN0cmluZywgcmVnZXg6IGFueSk6IGFueSB7XG4gICAgbGV0IHNlbGYgPSB0aGlzXG4gICAgaWYgKHR5cGVvZiByZWdleCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHJlZ2V4ID0gbmV3IFJlZ0V4cChyZWdleClcbiAgICB9XG5cbiAgICBpZiAocmVnZXggaW5zdGFuY2VvZiBSZWdFeHApIHtcbiAgICAgIHJldHVybiByZWdleC5leGVjKHN0cmluZylcbiAgICB9IGVsc2UgaWYgKHJlZ2V4ICYmIEFycmF5LmlzQXJyYXkocmVnZXgpKSB7XG4gICAgICByZXR1cm4gcmVnZXgucmVkdWNlKGZ1bmN0aW9uIChyZXM6IGFueSwgaXRlbTogYW55KSB7XG4gICAgICAgIHJldHVybiAhIXJlcyA/IHJlcyA6IHNlbGYuZXhlYyhzdHJpbmcsIGl0ZW0pXG4gICAgICB9LCBudWxsKVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gbnVsbFxuICAgIH1cbiAgfVxufVxuIl19